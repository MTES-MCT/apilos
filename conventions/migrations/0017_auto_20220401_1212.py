# Generated by Django 3.2.12 on 2022-04-01 10:12

from django.db import migrations, models


def update_convention_status(apps, schema_editor):
    Convention = apps.get_model("conventions", "Convention")
    ConventionHistory = apps.get_model("conventions", "ConventionHistory")
    Convention.objects.filter(statut="BROUILLON").update(statut="1. Projet")
    Convention.objects.filter(statut="INSTRUCTION").update(
        statut="2. Instruction requise"
    )
    Convention.objects.filter(statut="CORRECTION").update(
        statut="3. Corrections requises"
    )
    Convention.objects.filter(statut="VALIDE").update(statut="4. A signer")
    Convention.objects.filter(statut="CLOS").update(statut="5. Transmise")

    ConventionHistory.objects.filter(statut_convention="BROUILLON").update(
        statut_convention="1. Projet"
    )
    ConventionHistory.objects.filter(statut_convention="INSTRUCTION").update(
        statut_convention="2. Instruction requise"
    )
    ConventionHistory.objects.filter(statut_convention="CORRECTION").update(
        statut_convention="3. Corrections requises"
    )
    ConventionHistory.objects.filter(statut_convention="VALIDE").update(
        statut_convention="4. A signer"
    )
    ConventionHistory.objects.filter(statut_convention="CLOS").update(
        statut_convention="5. Transmise"
    )

    ConventionHistory.objects.filter(statut_convention_precedent="BROUILLON").update(
        statut_convention_precedent="1. Projet"
    )
    ConventionHistory.objects.filter(statut_convention_precedent="INSTRUCTION").update(
        statut_convention_precedent="2. Instruction requise"
    )
    ConventionHistory.objects.filter(statut_convention_precedent="CORRECTION").update(
        statut_convention_precedent="3. Corrections requises"
    )
    ConventionHistory.objects.filter(statut_convention_precedent="VALIDE").update(
        statut_convention_precedent="4. A signer"
    )
    ConventionHistory.objects.filter(statut_convention_precedent="CLOS").update(
        statut_convention_precedent="5. Transmise"
    )


def rollback_convention_status(apps, schema_editor):
    Convention = apps.get_model("conventions", "Convention")
    ConventionHistory = apps.get_model("conventions", "ConventionHistory")
    Convention.objects.filter(statut="1. Projet").update(statut="BROUILLON")
    Convention.objects.filter(statut="2. Instruction requise").update(
        statut="INSTRUCTION"
    )
    Convention.objects.filter(statut="3. Corrections requises").update(
        statut="CORRECTION"
    )
    Convention.objects.filter(statut="4. A signer").update(statut="VALIDE")
    Convention.objects.filter(statut="5. Transmise").update(statut="CLOS")

    ConventionHistory.objects.filter(statut_convention="1. Projet").update(
        statut_convention="BROUILLON"
    )
    ConventionHistory.objects.filter(statut_convention="2. Instruction requise").update(
        statut_convention="INSTRUCTION"
    )
    ConventionHistory.objects.filter(
        statut_convention="3. Corrections requises"
    ).update(statut_convention="CORRECTION")
    ConventionHistory.objects.filter(statut_convention="4. A signer").update(
        statut_convention="VALIDE"
    )
    ConventionHistory.objects.filter(statut_convention="5. Transmise").update(
        statut_convention="CLOS"
    )

    ConventionHistory.objects.filter(statut_convention_precedent="1. Projet").update(
        statut_convention_precedent="BROUILLON"
    )
    ConventionHistory.objects.filter(
        statut_convention_precedent="2. Instruction requise"
    ).update(statut_convention_precedent="INSTRUCTION")
    ConventionHistory.objects.filter(
        statut_convention_precedent="3. Corrections requises"
    ).update(statut_convention_precedent="CORRECTION")
    ConventionHistory.objects.filter(statut_convention_precedent="4. A signer").update(
        statut_convention_precedent="VALIDE"
    )
    ConventionHistory.objects.filter(statut_convention_precedent="5. Transmise").update(
        statut_convention_precedent="CLOS"
    )


class Migration(migrations.Migration):

    dependencies = [
        ("conventions", "0016_auto_20220107_1209"),
    ]

    operations = [
        migrations.AlterField(
            model_name="convention",
            name="statut",
            field=models.CharField(
                choices=[
                    ("1. Projet", "Création d'un projet de convention"),
                    (
                        "2. Instruction requise",
                        "Projet de convention soumis à l'instruction",
                    ),
                    (
                        "3. Corrections requises",
                        "Projet de convention à modifier par le bailleur",
                    ),
                    ("4. A signer", "Convention à signer"),
                    ("5. Transmise", "Convention transmise"),
                ],
                default="1. Projet",
                max_length=25,
            ),
        ),
        migrations.AlterField(
            model_name="conventionhistory",
            name="statut_convention",
            field=models.CharField(
                choices=[
                    ("1. Projet", "Création d'un projet de convention"),
                    (
                        "2. Instruction requise",
                        "Projet de convention soumis à l'instruction",
                    ),
                    (
                        "3. Corrections requises",
                        "Projet de convention à modifier par le bailleur",
                    ),
                    ("4. A signer", "Convention à signer"),
                    ("5. Transmise", "Convention transmise"),
                ],
                default="1. Projet",
                max_length=25,
            ),
        ),
        migrations.AlterField(
            model_name="conventionhistory",
            name="statut_convention_precedent",
            field=models.CharField(
                choices=[
                    ("1. Projet", "Création d'un projet de convention"),
                    (
                        "2. Instruction requise",
                        "Projet de convention soumis à l'instruction",
                    ),
                    (
                        "3. Corrections requises",
                        "Projet de convention à modifier par le bailleur",
                    ),
                    ("4. A signer", "Convention à signer"),
                    ("5. Transmise", "Convention transmise"),
                ],
                default="1. Projet",
                max_length=25,
            ),
        ),
        migrations.RunPython(update_convention_status, rollback_convention_status),
    ]
