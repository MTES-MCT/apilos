# Generated by Django 4.2.13 on 2024-09-04 11:51

import uuid

import django.contrib.postgres.search
import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("bailleurs", "0001_initial_squashed_0027_remove_search_vector_trigger"),
        ("instructeurs", "0001_initial_squashed_0017_auto_20230925_1209"),
        ("programmes", "0110_alter_ref_programme6_blank_and_null"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalProgramme",
            fields=[
                ("id", models.IntegerField(blank=True, db_index=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("nom", models.CharField(max_length=255)),
                ("numero_operation", models.CharField(blank=True, max_length=255)),
                (
                    "numero_operation_pour_recherche",
                    models.CharField(blank=True, max_length=255),
                ),
                ("seconde_vie", models.BooleanField(default=False)),
                ("adresse", models.TextField(blank=True)),
                ("code_postal", models.CharField(blank=True, max_length=5)),
                ("ville", models.CharField(blank=True, max_length=255)),
                ("code_insee_commune", models.CharField(blank=True, max_length=10)),
                ("code_insee_departement", models.CharField(blank=True, max_length=10)),
                ("code_insee_region", models.CharField(blank=True, max_length=10)),
                (
                    "annee_gestion_programmation",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "zone_123",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "01"),
                            ("2", "02"),
                            ("3", "03"),
                            ("1bis", "1bis"),
                        ],
                        default=None,
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "zone_abc",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A", "A"),
                            ("Abis", "Abis"),
                            ("B1", "B1"),
                            ("B2", "B2"),
                            ("C", "C"),
                            ("DROM", "DROM"),
                        ],
                        default=None,
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "surface_utile_totale",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "surface_corrigee_totale",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "type_operation",
                    models.CharField(
                        choices=[
                            ("SANSOBJET", "Sans Objet"),
                            ("NEUF", "Construction Neuve"),
                            ("VEFA", "Construction Neuve > VEFA"),
                            ("ACQUIS", "Acquisition"),
                            ("ACQUISAMELIORATION", "Acquisition-Amélioration"),
                            ("REHABILITATION", "Réhabilitation"),
                            ("ACQUISSANSTRAVAUX", "Acquisition sans travaux"),
                            ("SANSTRAVAUX", "Sans aide financière (sans travaux)"),
                            ("USUFRUIT", "Usufruit"),
                        ],
                        default="NEUF",
                        max_length=25,
                    ),
                ),
                (
                    "nature_logement",
                    models.CharField(
                        choices=[
                            ("LOGEMENTSORDINAIRES", "Logements ordinaires"),
                            ("AUTRE", "Autres logements foyers"),
                            ("HEBERGEMENT", "Hébergement"),
                            ("RESISDENCESOCIALE", "Résidence sociale"),
                            (
                                "PENSIONSDEFAMILLE",
                                "Pensions de famille (Maisons relais)",
                            ),
                            ("RESIDENCEDACCUEIL", "Résidence d'accueil"),
                            ("RESIDENCEUNIVERSITAIRE", "Résidence universitaire"),
                            ("RHVS", "RHVS"),
                        ],
                        default="LOGEMENTSORDINAIRES",
                        max_length=25,
                    ),
                ),
                ("anru", models.BooleanField(default=False)),
                ("nb_locaux_commerciaux", models.IntegerField(blank=True, null=True)),
                ("nb_bureaux", models.IntegerField(blank=True, null=True)),
                ("autres_locaux_hors_convention", models.TextField(blank=True)),
                ("vendeur", models.TextField(blank=True)),
                ("acquereur", models.TextField(blank=True)),
                ("date_acte_notarie", models.DateField(blank=True, null=True)),
                ("reference_notaire", models.TextField(blank=True)),
                ("reference_publication_acte", models.TextField(blank=True)),
                ("acte_de_propriete", models.TextField(blank=True)),
                ("effet_relatif", models.TextField(blank=True)),
                ("certificat_adressage", models.TextField(blank=True)),
                ("reference_cadastrale", models.TextField(blank=True)),
                ("edd_volumetrique", models.TextField(blank=True, max_length=5000)),
                (
                    "mention_publication_edd_volumetrique",
                    models.TextField(blank=True, max_length=5000),
                ),
                ("edd_classique", models.TextField(blank=True, max_length=5000)),
                (
                    "mention_publication_edd_classique",
                    models.TextField(blank=True, max_length=5000),
                ),
                ("edd_stationnements", models.TextField(blank=True, max_length=5000)),
                ("permis_construire", models.CharField(blank=True, max_length=255)),
                ("date_achevement_previsible", models.DateField(blank=True, null=True)),
                ("date_achat", models.DateField(blank=True, null=True)),
                ("date_achevement", models.DateField(blank=True, null=True)),
                (
                    "date_autorisation_hors_habitat_inclusif",
                    models.DateField(blank=True, null=True),
                ),
                ("date_convention_location", models.DateField(blank=True, null=True)),
                (
                    "date_residence_argement_gestionnaire_intermediation",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "departement_residence_argement_gestionnaire_intermediation",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "ville_signature_residence_agrement_gestionnaire_intermediation",
                    models.CharField(blank=True, max_length=255),
                ),
                ("date_achevement_compile", models.DateField(blank=True, null=True)),
                ("cree_le", models.DateTimeField(blank=True, editable=False)),
                ("mis_a_jour_le", models.DateTimeField(blank=True, editable=False)),
                (
                    "search_vector",
                    django.contrib.postgres.search.SearchVectorField(
                        blank=True, null=True
                    ),
                ),
                (
                    "reassign_command_old_admin_backup",
                    models.IntegerField(blank=True, null=True),
                ),
                ("history_user_id", models.IntegerField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "administration",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="instructeurs.administration",
                    ),
                ),
                (
                    "bailleur",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="bailleurs.bailleur",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="programmes.programme",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical programme",
                "verbose_name_plural": "historical programmes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
