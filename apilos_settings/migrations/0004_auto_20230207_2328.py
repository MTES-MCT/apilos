# Generated by Django 4.1.5 on 2023-02-07 22:28

from django.db import migrations
from django.db.models.functions import Substr
from programmes.models import Programme

# TODO: check if code_insee_departement returned by SIAP is always 2 digits
# set code_insee_departement and code_insee_region to programmes
departements_regions = {
    "01": "84",
    "02": "32",
    "03": "84",
    "04": "93",
    "05": "93",
    "06": "93",
    "07": "84",
    "08": "44",
    "09": "76",
    "10": "44",
    "11": "76",
    "12": "76",
    "13": "93",
    "14": "28",
    "15": "84",
    "16": "75",
    "17": "75",
    "18": "24",
    "19": "75",
    "21": "27",
    "22": "53",
    "23": "75",
    "24": "75",
    "25": "27",
    "26": "84",
    "27": "28",
    "28": "24",
    "29": "53",
    "2A": "94",
    "2B": "94",
    "20": "94",
    "30": "76",
    "31": "76",
    "32": "76",
    "33": "75",
    "34": "76",
    "35": "53",
    "36": "24",
    "37": "24",
    "38": "84",
    "39": "27",
    "40": "75",
    "41": "24",
    "42": "84",
    "43": "84",
    "44": "52",
    "45": "24",
    "46": "76",
    "47": "75",
    "48": "76",
    "49": "52",
    "50": "28",
    "51": "44",
    "52": "44",
    "53": "52",
    "54": "44",
    "55": "44",
    "56": "53",
    "57": "44",
    "58": "27",
    "59": "32",
    "60": "32",
    "61": "28",
    "62": "32",
    "63": "84",
    "64": "75",
    "65": "76",
    "66": "76",
    "67": "44",
    "68": "44",
    "69": "84",
    "70": "27",
    "71": "27",
    "72": "52",
    "73": "84",
    "74": "84",
    "75": "11",
    "76": "28",
    "77": "11",
    "78": "11",
    "79": "75",
    "80": "32",
    "81": "76",
    "82": "76",
    "83": "93",
    "84": "93",
    "85": "52",
    "86": "75",
    "87": "75",
    "88": "44",
    "89": "27",
    "90": "27",
    "91": "11",
    "92": "11",
    "93": "11",
    "94": "11",
    "95": "11",
    "971": "1",
    "972": "2",
    "973": "3",
    "974": "4",
    "976": "6",
}


def set_convention_departement(apps, schema_editor):
    Departement = apps.get_model("apilos_settings", "Departement")
    # Programme = apps.get_model("programmes", "Programme")

    for departement in Departement.objects.all():
        Programme.objects.annotate(departement=Substr("code_postal", 1, 2)).filter(
            departement=departement.code_postal
        ).update(
            code_insee_region=departement.code_insee_region,
            code_insee_departement=departement.code_postal,
        )


class Migration(migrations.Migration):

    dependencies = [
        ("apilos_settings", "0003_departement_code_insee_region"),
    ]

    operations = [
        migrations.RunPython(set_convention_departement, migrations.RunPython.noop)
    ]
