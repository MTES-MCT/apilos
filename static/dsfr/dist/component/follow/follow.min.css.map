{"version":3,"sources":["../../../../../../src/core/style/selector/tool/_pseudo.scss","../../../follow.css","<no source>","../../../../../../src/component/follow/style/_module.scss","../../../../../../src/core/style/typography/tool/_styles.scss","../../../../../../src/core/style/color/tool/_element.scss","../../../../../../src/core/style/spacing/tool/_space.scss","../../../../../../src/core/style/display/tool/_sr-only.scss","../../../../../../src/core/style/spacing/tool/_size.scss","../../../../../../src/core/style/spacing/tool/_position.scss","../../../../../../src/core/style/display/tool/_display.scss","../../../../../../src/core/style/spacing/function/_space.scss","../../../../../../src/component/button/style/_tool.scss","../../../../../../src/core/style/selector/tool/_pattern.scss","../../../../../../src/component/link/style/tool/_icon.scss","../../../../../../src/component/link/style/tool/_size.scss","../../../../../../src/core/style/function/_unit.scss","../../../../../../src/core/style/typography/tool/_font-weight.scss","../../../../../../src/core/style/typography/setting/_font-weight.scss","../../../../../../src/core/style/icon/_tool.scss","../../../../../../src/component/follow/deprecated/style/_module.scss","../../../../../../src/core/style/typography/tool/_list.scss","../../../../../../src/core/style/action/tool/_link.scss","../../../../../../src/core/style/action/tool/_hover.scss","../../../../../../src/component/follow/style/_scheme.scss","../../../../../../src/core/style/color/tool/_disabled.scss","../../../../../../src/core/style/selector/tool/_breakpoint.scss","../../../../../../src/_media-query-order.scss","../../../../../../src/legacy/style/tool/_legacy.scss","../../../../../../src/component/follow/style/_legacy.scss","../../../../../../src/core/style/selector/tool/_nest.scss"],"names":[],"mappings":"AAgBE,gBC8PF;AC9QA;;GAAA,ACKA,WCkGI,0BAA6B,CAA7B,uBAA6B,CC9CzB,+CAAgB,CAIhB,iDAAiB,CA7BrB,kDAAU,CCDV,gBLJJ,CEhBG,iCIAD,kBAAsB,CAEtB,QAAS,CC8CL,UAAQ,CF5BV,WCtBkB,CACpB,eAAgB,CDqBd,SCvBgB,CEFlB,iBAAU,CFMV,kBAAmB,CC4Cf,SPVN,CEnCG,sCOAC,YAAa,CAIb,qBAAgB,CJYd,YHNqB,CKGrB,iBP6BN,CE1CG,gDGgBG,kBKsEa,CLtEb,YL+BN,CE/CG,8CAkBK,sBFiCR,CEnDG,qCGgBG,eHqBwB,CGrBxB,iBLqDN,CErEG,oLGgBG,eL+DN,CElBE,mBC+BE,0BAA6B,CAA7B,2BHSJ,CExCG,kCG7CG,mBKsEa,CLtEb,kBKsEa,CCjDjB,uBAAgC,CJxC5B,UP+GN,CWrEE,0CTkCM,0BAA2B,CGzD7B,iBKsEa,CC5Cf,cAAe,CAFf,UX0EJ,CWrEE,qCACE,mBAAoB,CACpB,cAAe,CACf,UXwEJ,CDnHE,4CAGI,YCoHN,CY3HY,wLCKR,kBAAmB,CCRrB,cCkBgD,CCRhD,eCTW,CHAX,kBJuFiB,CG/Cf,iBH+Ce,CGhDf,gBHgDe,CInFf,iBJmFe,CGlDf,eAAgB,CAKhB,aAP0C,CAG1C,kBb0GJ,CY9IY,+LMmFV,yCAJgF,CLlC5E,gBE9B4C,CF4B5C,aAAc,CACd,iBAXwC,CbiH9C,CYlJY,4ICKR,kBAAmB,CCRrB,kBCkBgD,CCRhD,eCTW,CHAX,mBJuFiB,CG/Cf,eH+Ce,CGhDf,cHgDe,CInFf,eJmFe,CGlDf,eAAgB,CAKhB,aAP0C,CAG1C,kBbmIJ,CYvKY,mJMmFV,uCAJgF,CLlC5E,cE9B4C,CF4B5C,aAAc,CACd,iBAXwC,Cb0I9C,CElLA,2CE2BI,uDAAU,CCLR,iBKsEa,CLtEb,kBLiLN,CD5LE,oCmB4DA,WAlBU,CAqBR,elB+LJ,CD9PE,mCmB4DA,WAlBU,CAqBR,elBoMJ,CDnQE,qCmB4DA,WAlBU,CAqBR,elByMJ,CDxQE,oCmB4DA,WAlBU,CAqBR,elB8MJ,CD7QE,mCmB4DA,WAlBU,CAqBR,elBmNJ,CmB7RA,2BCoBE,cAAU,CACV,cAAU,CACV,YAAW,CACX,YAAW,CACX,YAAW,CACX,aAAY,CACZ,iBAAa,CDnBX,YAAa,CACb,cAAe,Cdcb,mBKsEa,CLtEb,kBKsEa,CCjDjB,uBAAgC,CJxC5B,UP0SN,CWhQE,mCNvBI,iBKsEa,CC5Cf,cAAe,CAFf,UXqQJ,CWhQE,8BACE,mBAAoB,CACpB,cAAe,CACf,UXmQJ,CD9SE,qCAGI,YC+SN,CmBlTG,4BEGD,oBAAgB,CAChB,sBAAkB,CAClB,yBAAqB,CCoCnB,yBAAa,ClB+CX,eAAQ,CACR,gBAAS,CAHX,4BAA6B,CAtE7B,yCAAU,CeZR,mBAAoB,CNHtB,kBAAmB,CCRrB,cCkBgD,CCRhD,eCTW,CHAX,kBJuFiB,CLtEb,kBKsEa,CLtEb,iBKsEa,CG/Cf,iBH+Ce,CGhDf,gBHgDe,CInFf,iBJmFe,CGlDf,eAAgB,CAKhB,aAP0C,CAG1C,kBbwSJ,CDxUE,mCmB+EA,yCAJgF,CLlC5E,gBE9B4C,CF4B5C,aAAc,CACd,iBAXwC,Cb+S9C,CmB5UG,gDNCC,kBAAmB,CCRrB,kBCkBgD,CCRhD,eCTW,CHAX,mBJuFiB,CG/Cf,eH+Ce,CGhDf,cHgDe,CInFf,eJmFe,CGlDf,eAAgB,CAKhB,aAP0C,CAG1C,kBbiUJ,CDjWE,uDmB+EA,uCAJgF,CLlC5E,cE9B4C,CF4B5C,aAAc,CACd,iBAXwC,CbwU9C,CDrWE,qCmB4DA,WAlBU,CAqBR,elBiTJ,CDhXE,oCmB4DA,WAlBU,CAqBR,elBsTJ,CDrXE,sCmB4DA,WAlBU,CAqBR,elB2TJ,CD1XE,qCmB4DA,WAlBU,CAqBR,elBgUJ,CD/XE,oCmB4DA,WAlBU,CAqBR,elBqUJ,CuB9YE,qBnBmDM,4CAAgB,CAIhB,8CAAiB,CA7BrB,+CJgYJ,CuBnZI,kBnBmBA,4BJoYJ,CuBlZM,6BnBcF,8BJwYJ,CuBjZK,2BnBiFC,eAAQ,CACR,gBAAS,CAHX,4BAA6B,CAtE7B,yCJ+YJ,CwBhYU,0JpByDJ,eAAQ,CACR,gBAAS,CAHX,4BAA6B,CAtE7B,+BJ8aJ,CyB5bI;ECPE,cAAA,CxBAH,sCAsBK,kBFkCN,CExDC,8CAyBO,0BFkCR,CE3DC,gDA8BO,0BAAiC,CGdrC,eL+CJ,CE/DC,qCGgBG,gBL2EJ,CE3FC,4EGgBG,eL+EJ,CApGF,CyBYI;ECPE,cAAA,CxBNN,WG0BI,cLCF,CErBC,wGGgBG,gBLqEJ,CE3FF,8BOcI,sBAAa,CARb,YAAa,CAIb,qBAAgB,CFiBd,WAAQ,CETV,sBT+KF,CEjMF,2CE2BI,uDAAU,CCLR,YH4FqB,CG5FrB,qBKkC+C,CLlC/C,YH2FsB,CF2F1B,CE5MF,0CGsBM,sBLwMJ,CE9NF,oDOcI,kBAAa,CARb,YAAa,CAIb,kBAAgB,CAQhB,6BTqNF,CEvOF,uEC8FM,gBH+IJ,CE7OF,yEKmBM,aAAW,CFGX,mBKsEa,CLtEb,oBL+NJ,CErPF,oFGsBM,cHsH6B,CGtH7B,oBLmOJ,CEzPF,mFGsBM,mBKsEa,CLtEb,eLuOJ,CE7PF,mEC8FM,iBHqKJ,CA9PF,CyBQI;ECPE,cAAA,C1BGN,CyBII;ECPE,cAAA,C1BON,C2BJI,2DCLF,yBAEI,c5B2cJ,CuBhdA,WnB0BE,wBJ4bF,C6BrdE,iBzBkDI,wBJyaN,C6B3dE,kBzBsDI,wBJwaN,CuB/dA,qBnB0BE,qBJ2cF,C6BpeE,2BzBkDI,wBJwbN,C6B1eE,4BzBsDI,wBJubN,CuBveE,kBnBmBA,aJ0dF,CuBxeI,6BnBcF,UJgeF,CuBzeG,2BnB2EC,4BAA6B,CAlE/B,YAAU,CJseZ,CwBvdQ,4EpBmDJ,4BAA6B,CAlE/B,aJkfF,CuB5gBA,2CnB0BE,6BJ8fF,CAvEF,C2BzcI,qGJRF,2CnB0BE,6BJogBF,CACF","file":"follow.min.css","sourcesContent":["////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  FOLLOW\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n\n@media (min-width: 48em) {\n  /*! media md */\n}\n\n@media (min-width: 62em) {\n  /*! media lg */\n}\n\n@media (min-width: 78em) {\n  /*! media xl */\n}\n\n/**\n* Mixin d'ajout des icones des réseaux sociaux\n**/\n.fr-follow {\n  padding: 1.5rem 0;\n  --title-spacing: 0 0 0.5rem;\n  --text-spacing: 0 0 1rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow {\n    padding: 2rem 0;\n  }\n}\n\n.fr-follow__newsletter .fr-label {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  /* added line */\n  border: 0;\n}\n\n.fr-follow__newsletter .fr-input-wrap {\n  display: flex;\n  flex-direction: column;\n  max-width: 37.5rem;\n  margin-top: 0;\n}\n\n.fr-follow__newsletter .fr-input-wrap .fr-input {\n  margin-bottom: 1rem;\n  margin-top: 0;\n}\n\n.fr-follow__newsletter .fr-input-wrap .fr-btn {\n  justify-content: center;\n}\n\n@media (min-width: 36em) {\n  .fr-follow__newsletter .fr-input-wrap {\n    flex-direction: row;\n  }\n  .fr-follow__newsletter .fr-input-wrap .fr-btn {\n    border-radius: 0 0.25rem 0 0;\n  }\n  .fr-follow__newsletter .fr-input-wrap .fr-input {\n    margin-bottom: 0;\n    border-radius: 0.25rem 0 0 0;\n  }\n}\n\n.fr-follow__newsletter .fr-hint-text {\n  margin-top: 1.5rem;\n  margin-bottom: 0;\n}\n\n.fr-follow__newsletter .fr-valid-text,\n.fr-follow__newsletter .fr-error-text {\n  margin-top: 1rem;\n}\n\n.fr-follow__newsletter .fr-valid-text + .fr-hint-text,\n.fr-follow__newsletter .fr-error-text + .fr-hint-text {\n  margin-top: 1rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow__newsletter .fr-valid-text + .fr-hint-text,\n  .fr-follow__newsletter .fr-error-text + .fr-hint-text {\n    margin-top: 0.5rem;\n  }\n}\n\n@media (min-width: 36em) {\n  .fr-follow__newsletter .fr-hint-text {\n    margin-top: 0.5rem;\n  }\n  .fr-follow__newsletter .fr-valid-text,\n  .fr-follow__newsletter .fr-error-text {\n    margin-top: 1rem;\n  }\n}\n\n.fr-follow__social {\n  --text-spacing: 0 0 0.75rem;\n  --title-spacing: 0 0 0.75rem;\n}\n\n.fr-follow__social .fr-btns-group {\n  width: calc(100% + 1rem);\n  margin-right: -1rem;\n  margin-bottom: -1rem;\n  width: auto;\n}\n\n.fr-follow__social .fr-btns-group .fr-btn {\n  width: auto;\n  margin-right: 1rem;\n  max-width: 100%;\n}\n\n.fr-follow__social .fr-btns-group > li {\n  display: inline-flex;\n  max-width: 100%;\n  width: auto;\n}\n\n.fr-follow__social .fr-btns-group > li::before {\n  content: none;\n}\n\n.fr-follow__social .fr-btns-group .fr-btn {\n  justify-content: flex-start;\n}\n\n.fr-follow__social .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=\"fr-icon-\"]):not([class*=\" fr-icon-\"]):not([class^=\"fr-fi-\"]):not([class*=\" fr-fi-\"]) {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1.5rem;\n  flex-direction: row;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  font-weight: 500;\n}\n\n.fr-follow__social .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=\"fr-icon-\"]):not([class*=\" fr-icon-\"]):not([class^=\"fr-fi-\"]):not([class*=\" fr-fi-\"])::before {\n  font: normal 700 normal 1.5rem/1 dsfr-icon;\n}\n\n.fr-follow__social .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=\"fr-icon-\"]):not([class*=\" fr-icon-\"]):not([class^=\"fr-fi-\"]):not([class*=\" fr-fi-\"])::before {\n  margin-left: 0;\n  margin-right: 0.5rem;\n  font-size: 1.5rem;\n}\n\n.fr-follow__social .fr-btns-group--lg .fr-btn:not([class^=\"fr-icon-\"]):not([class*=\" fr-icon-\"]):not([class^=\"fr-fi-\"]):not([class*=\" fr-fi-\"]) {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n  min-height: 3rem;\n  padding: 0.5rem 2rem;\n  flex-direction: row;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 3rem;\n  max-height: 3rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  font-weight: 500;\n}\n\n.fr-follow__social .fr-btns-group--lg .fr-btn:not([class^=\"fr-icon-\"]):not([class*=\" fr-icon-\"]):not([class^=\"fr-fi-\"]):not([class*=\" fr-fi-\"])::before {\n  font: normal 700 normal 2rem/1 dsfr-icon;\n}\n\n.fr-follow__social .fr-btns-group--lg .fr-btn:not([class^=\"fr-icon-\"]):not([class*=\" fr-icon-\"]):not([class^=\"fr-fi-\"]):not([class*=\" fr-fi-\"])::before {\n  margin-left: 0;\n  margin-right: 0.5rem;\n  font-size: 2rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    height: 100%;\n  }\n}\n\n.fr-follow .fr-grid-row > *:not(:first-child) {\n  margin-top: 1.5rem;\n  padding-top: 1.5rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    padding-left: calc(100% / 12);\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    padding-top: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    margin-top: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:last-child) {\n    padding-right: calc(100% / 12);\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter {\n    --text-spacing: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter > * {\n    max-width: 50%;\n    padding-right: 0.75rem;\n    padding-left: 0.75rem;\n  }\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter > :first-child {\n    padding-right: 0.75rem;\n    padding-left: 0;\n  }\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter > :last-child {\n    padding-right: 0;\n    padding-left: 0.75rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__social {\n    --title-spacing: 0;\n  }\n}\n\n.fr-follow .fr-btn--facebook::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-btn--twitter::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-btn--instagram::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-btn--linkedin::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-btn--youtube::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-links-group {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  width: calc(100% + 1rem);\n  margin-right: -1rem;\n  margin-bottom: -1rem;\n  width: auto;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.fr-follow .fr-links-group .fr-btn {\n  width: auto;\n  margin-right: 1rem;\n  max-width: 100%;\n}\n\n.fr-follow .fr-links-group > li {\n  display: inline-flex;\n  max-width: 100%;\n  width: auto;\n}\n\n.fr-follow .fr-links-group > li::before {\n  content: none;\n}\n\n.fr-follow__social .fr-link {\n  --underline-img: none;\n  --link-blank-font: none;\n  --link-blank-content: none;\n  --hover-tint: var(--hover);\n  display: inline-flex;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1.5rem;\n  flex-direction: row;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  font-weight: 500;\n}\n\n.fr-follow__social .fr-link::before {\n  font: normal 700 normal 1.5rem/1 dsfr-icon;\n}\n\n.fr-follow__social .fr-link::before {\n  margin-left: 0;\n  margin-right: 0.5rem;\n  font-size: 1.5rem;\n}\n\n.fr-follow__social .fr-links-group--lg .fr-link {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n  min-height: 3rem;\n  padding: 0.5rem 2rem;\n  flex-direction: row;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 3rem;\n  max-height: 3rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  font-weight: 500;\n}\n\n.fr-follow__social .fr-links-group--lg .fr-link::before {\n  font: normal 700 normal 2rem/1 dsfr-icon;\n}\n\n.fr-follow__social .fr-links-group--lg .fr-link::before {\n  margin-left: 0;\n  margin-right: 0.5rem;\n  font-size: 2rem;\n}\n\n.fr-follow .fr-link--facebook::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-link--twitter::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-link--instagram::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-link--linkedin::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow .fr-link--youtube::before {\n  content: \"\";\n  font-weight: 700;\n}\n\n.fr-follow {\n  background-color: var(--background-alt-blue-france);\n  --hover: var(--background-alt-blue-france-hover);\n  --active: var(--background-alt-blue-france-active);\n}\n\n.fr-follow .fr-input {\n  background-color: var(--background-default-grey);\n  --hover: var(--background-default-grey-hover);\n  --active: var(--background-default-grey-active);\n}\n\n.fr-follow__title {\n  color: var(--text-title-grey);\n}\n\n.fr-follow__newsletter-legal {\n  color: var(--text-mention-grey);\n}\n\n.fr-follow__social .fr-btn {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n}\n\n.fr-follow__social .fr-btn:disabled, .fr-follow__social a.fr-btn:not([href]) {\n  color: var(--text-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n.fr-follow .fr-grid-row > *:not(:first-child) {\n  box-shadow: 0 -1px 0 0 var(--border-default-blue-france);\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    box-shadow: -1px 0 0 0 var(--border-default-blue-france);\n  }\n}\n\n.fr-follow__social .fr-link {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n}\n\n.fr-follow__social .fr-link:disabled, .fr-follow__social a.fr-link:not([href]) {\n  color: var(--text-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n  * Correctif de la largeur max des textes\n  */\n  .fr-follow__newsletter > * {\n    max-width: 100%;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow {\n    background-color: #f5f5fe;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow:hover {\n    background-color: #dcdcfc;\n  }\n  .fr-follow:active {\n    background-color: #cbcbfa;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow .fr-input {\n    background-color: #fff;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow .fr-input:hover {\n    background-color: #f6f6f6;\n  }\n  .fr-follow .fr-input:active {\n    background-color: #ededed;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__title {\n    color: #161616;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__newsletter-legal {\n    color: #666;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__social .fr-btn {\n    background-color: transparent;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__social .fr-btn {\n    color: #000091;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__social .fr-btn:disabled, .fr-follow__social a.fr-btn:not([href]) {\n    color: #929292;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__social .fr-btn:disabled, .fr-follow__social a.fr-btn:not([href]) {\n    background-color: transparent;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    box-shadow: 0 -1px 0 0 #6a6af4;\n  }\n}\n\n@media all and (min-width: 48em) and (-ms-high-contrast: none), (min-width: 48em) and (-ms-high-contrast: active) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    box-shadow: -1px 0 0 0 #6a6af4;\n  }\n}\n",null,"////\n/// Follow Module\n/// @group follow\n////\n\n#{ns(follow)} {\n  @include padding(6v 0);\n  @include padding(8v 0, md);\n  @include set-title-margin(0 0 2v);\n  @include set-text-margin(0 0 4v);\n\n  &__newsletter {\n    // bloc newsletter\n\n    #{ns(label)} {\n      @include sr-only();\n    }\n\n    #{ns(input-wrap)} {\n      @include display-flex(column);\n      @include max-width(150v);\n      @include margin-top(0);\n\n      #{ns(input)} {\n        @include margin-bottom(4v);\n        @include margin-top(0);\n      }\n\n      #{ns(btn)} {\n        justify-content: center;\n      }\n\n      @include respond-from(sm) {\n        flex-direction: row;\n\n        #{ns(btn)} {\n          border-radius: 0 #{space(1v)} 0 0;\n        }\n\n        #{ns(input)} {\n          @include margin-bottom(0);\n          border-radius: #{space(1v)} 0 0 0;\n        }\n      }\n    }\n\n    #{ns(hint-text)} {\n      @include margin-top(6v);\n      @include margin-bottom(0);\n    }\n\n    #{ns(valid-text)},\n    #{ns(error-text)} {\n      @include margin-top(4v);\n      + #{ns(hint-text)} {\n        @include margin-top(4v);\n        @include margin-top(2v, md);\n      }\n    }\n\n    @include respond-from(sm) {\n      #{ns(hint-text)} {\n        @include margin-top(2v);\n      }\n\n      #{ns(valid-text)},\n      #{ns(error-text)} {\n        @include margin-top(4v);\n      }\n    }\n  }\n\n  &__social {\n    // bloc social\n    @include set-text-margin(0 0 3v);\n    @include set-title-margin(0 0 3v);\n\n    #{ns-group(btns)} {\n      @include horizontal-btns-group;\n      @include margin-right(-4v);\n      @include margin-bottom(-4v);\n      @include width(auto);\n\n      #{ns(btn)} {\n        justify-content: flex-start;\n      }\n\n      &:not(#{ns-group(btns)}--sm):not(#{ns-group(btns)}--lg) {\n        #{ns(btn)} {\n          @include has-not-icon {\n            @include nest-btn(md, only, null, null, false);\n          }\n        }\n      }\n\n      &--lg {\n        #{ns(btn)} {\n          @include has-not-icon {\n            @include nest-btn(lg, only, null, null, false);\n          }\n        }\n      }\n    }\n  }\n\n  #{ns(grid-row)} {\n    > * > div {\n      @include respond-from(md) {\n        @include display-flex(column, flex-start, center);\n        @include height(100%);\n      }\n    }\n\n    > *:not(:first-child) {\n      // Séparateur en box-shadow dans schemes\n      @include padding-left(calc(100% / 12), md);\n      @include margin-top(6v);\n      @include padding-top(6v);\n      @include padding-top(0, md);\n      @include margin-top(0, md);\n    }\n\n    > *:not(:last-child) {\n      @include padding-right(calc(100% / 12), md);\n    }\n\n    > *:first-child:last-child {\n      > div {\n        @include respond-from(md) {\n          @include display-flex(row, center, space-between);\n        }\n      }\n\n      > #{ns(follow)}__newsletter {\n        // code spécifique à newsletter seul\n        @include set-text-margin(0,md);\n        @include respond-from(md) {\n          & > * {\n            @include max-width(50%);\n            @include padding-right(3v);\n            @include padding-left(3v);\n          }\n\n          & > :first-child {\n            @include padding-right(3v);\n            @include padding-left(0);\n          }\n\n          & > :last-child {\n            @include padding-right(0);\n            @include padding-left(3v);\n          }\n        }\n      }\n\n      > #{ns(follow)}__social {\n        // code spécifique à social seul\n        @include set-title-margin(0, md);\n      }\n    }\n  }\n\n  @include social-icon(facebook, facebook-circle-fill);\n  @include social-icon(twitter, twitter-fill);\n  @include social-icon(instagram, instagram-fill);\n  @include social-icon(linkedin, linkedin-box-fill);\n  @include social-icon(youtube, youtube-fill);\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} font-size($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Color Tools : Element\n/// @group core\n////\n\n$ACCENT: none;\n\n@mixin _scheme-element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map-get($options, legacy);\n  $important: map-get($options, important);\n  $hover: map-get($options, hover);\n  $standalone: map-get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy {\n    $legacy-target: ie11;\n  }\n\n  $tokens: normalise-tokens($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: get-colors($tokens, $type, $options);\n  $result: get-result($colors, $value);\n  $result: important($result, $important);\n\n  @include legacy($legacy-target) {\n    #{$prop}: #{$result};\n  }\n\n  @if $hover and $context == background and length($tokens) == 1 {\n    $nest-hover: null;\n    $prop-hover: --hover;\n    $result-hover: #{important(get-color(nth($tokens, 1), decision, (var: true, hover: true)), $important)};\n    $nest-active: null;\n    $prop-active: --active;\n    $result-active: #{important(get-color(nth($tokens, 1), decision, (var: true, active: true)), $important)};\n\n    @if $legacy or $standalone {\n      $type: hex;\n      $option: (theme: light);\n\n      $nest-hover: '&:hover';\n      $prop-hover: $prop;\n      $result-hover: #{important(get-color(nth($tokens, 1), hex, (hover: true)), $important)};\n      $nest-active: '&:active';\n      $prop-active: $prop;\n      $result-active: #{important(get-color(nth($tokens, 1), hex, (active: true)), $important)};\n    }\n\n    @include legacy($legacy-target) {\n      @include nest($nest-hover) {\n        #{$prop-hover}: #{$result-hover};\n      }\n\n      @include nest($nest-active) {\n        #{$prop-active}: #{$result-active};\n      }\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-bg-color($tokens, $options:()) {\n  @if not map-has-key($options, hover) {\n    $options: map-merge($options, (hover: true));\n  }\n  @include _scheme-element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin scheme-element-bg-transparent($options) {\n  $legacy: map-get($options, legacy);\n  $important: map-get($options, important);\n  $hover: map-get($options, hover);\n\n  $value: important(transparent, $important);\n\n  @if $important {\n    $value: #{$value} !important;\n  }\n\n  @if $legacy {\n    @include legacy(ie11) {\n      background-color: transparent;\n    }\n  }\n  @else {\n    background-color: transparent;\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-bg-image-color($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: get-tokens-length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: unquote('$color##{$i}');\n      $transformed: append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _scheme-element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-text-color($tokens, $options) {\n  @include _scheme-element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-fill-color($tokens, $options) {\n  @include _scheme-element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin scheme-element-border-color($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map-has-key($options, side) {\n    $prop:border-#{map-get($options, side)};\n  }\n  @include _scheme-element($prop, border, $tokens, $options, $value);\n}\n\n@mixin scheme-element-no-border($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    border: 0;\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($tokens, $options, $value:1px solid $COLOR) {\n  @include _scheme-element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: get-tokens-length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if map-has-key($box-shadows, $v) {\n      $transformed: append($transformed, _get-box-shadow($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _scheme-element(box-shadow, border, $tokens, $options, space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin scheme-element-no-box-shadow($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    box-shadow: none;\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Tool : Display sr-only\n/// @group core\n////\n\n@mixin sr-only() {\n  @include absolute;\n  @include size(1px, 1px);\n  @include padding(0);\n  @include margin(-1px);\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap; /* added line */\n  border: 0;\n}\n\n@mixin sr-only-from() {\n  @each $bp, $limits in $breakpoints {\n    @if $bp != xs {\n      #{ns('sr-only-' + $bp)} {\n        @include respond-from($bp) {\n          @include sr-only();\n        }\n      }\n    }\n  }\n}\n\n@mixin sr-only-to() {\n  @each $bp, $limits in $breakpoints {\n    @if $bp != xs {\n      #{ns('sr-only-to-' + $bp)} {\n        @include respond-to($bp) {\n          @include sr-only();\n        }\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Function : Spacing space\n/// @group core\n////\n\n$V: 0.25rem;\n$W: 0.5rem;\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if type-of($value) == list {\n    $list: ();\n    $separator: list-separator($value);\n    @each $v in $value {\n      $list: append($list, space($v), $separator);\n    }\n    @return $list;\n  }\n  @if type-of($value) == string {\n    $c: str-index($value, '(');\n    @if $c {\n      $b: null;\n      $n: 0;\n      $i: $c + 1;\n      $l: str-length($value);\n      @while $b == null and $i <= $l {\n        $char: str-slice($value, $i, $i);\n        @if $char == '(' {\n          $n: $n + 1;\n        }\n        @else if $char == ')' {\n          @if $n > 0 {\n            $n: $n - 1;\n          }\n          @else {\n            $b: $i;\n          }\n        }\n        $i: $i + 1;\n      }\n\n      $start: unquote('');\n      $middle: space(str-slice($value, $c + 1, $b - 1));\n      $end: unquote('');\n\n      @if $c > 1 {\n        $start: space(str-slice($value, 1, $c - 1));\n      }\n\n      $l: str-length($value);\n      @if $b < $l {\n        $end: space(str-slice($value, $b + 1, $l));\n      }\n\n      @return unquote('#{$start}(#{$middle})#{$end}');\n    }\n\n    @if str-index($value, ',') {\n      @return space(str-split($value, ','));\n    }\n\n    @if str-index($value, ' ') {\n      @return space(str-split($value, ' '));\n    }\n\n    $value: unquote($value);\n  }\n\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $v: quote($value);\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * $V;\n  }\n  @else if is-unit($value, w) {\n    @return $q * $W;\n  }\n  @return $value;\n}\n","////\n/// Button Tool\n/// @group button\n////\n\n@mixin build-btn() {\n  @include _build-link($btns-settings) {\n    @content;\n    @include font-weight(medium);\n  }\n}\n\n@mixin nest-btn($size: md, $place: null, $icon:null, $from: null, $insert: true) {\n  @include _nest-link($btns-settings, $size, $place, $icon, $from, $insert) {\n    @content;\n    @include font-weight(medium);\n  }\n}\n\n@mixin btn-kind-scheme ($kind: 2, $legacy: false) {\n  @if ($kind == 2) {\n    @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    @include scheme-element-text-color(action-high blue-france, (legacy:$legacy));\n    @include scheme-element-box-shadow-color(action-high blue-france, (legacy:$legacy));\n\n    @include disabled((legacy: $legacy, text: true, box-shadow: true, can-be-link: true)) {\n      @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    }\n  }\n  @else if ($kind == 3) {\n    @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    @include scheme-element-text-color(action-high blue-france, (legacy:$legacy));\n    @include scheme-element-box-shadow-color(default grey, (legacy:$legacy));\n\n    @include disabled((legacy: $legacy, text: true, box-shadow: true, can-be-link: true)) {\n      @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    }\n  }\n  @else if ($kind == 4) {\n    @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    @include scheme-element-text-color(action-high blue-france, (legacy:$legacy));\n    @include disabled((legacy: $legacy, text: true, box-shadow: false, can-be-link: true)) {\n      @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    }\n  }\n}\n\n@mixin horizontal-btns-group() {\n  width: calc(100% + #{space(4v)});\n\n  #{ns(btn)} {\n    width: auto;\n    @include margin-right(4v);\n    max-width: 100%;\n  }\n\n  > li {\n    display: inline-flex;\n    max-width: 100%;\n    width: auto;\n\n    @include before(none);\n  }\n}\n\n@mixin vertical-btns-group() {\n  @include margin-right(0);\n  @include margin-left(0);\n\n  > li {\n    width: 100%;\n    max-width: 100%;\n  }\n\n  #{ns(btn)} {\n    width: 100%;\n    @include margin-right(0);\n    @include margin-left(0);\n  }\n}\n","////\n/// Core Tool : Selector pattern\n/// @group core\n////\n\n@mixin _class-pattern($selector, $unify: true) {\n  @if & == null {\n    @at-root #{$selector} {\n      @content;\n    }\n  }\n  @else if $unify {\n    @at-root #{selector-unify(&, $selector)} {\n      @content;\n    }\n  }\n  @else {\n    #{$selector} {\n      @content;\n    }\n  }\n}\n\n@mixin class-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}[class*=\"#{$pattern}\"]';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}:not([class*=\"#{$pattern}\"])';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-start-with($start, $unify: true) {\n  @include _class-pattern(class-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-start-with($start, $unify: true) {\n  @include _class-pattern(class-not-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-end-with($end, $unify: true) {\n  @include _class-pattern(class-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-end-with($end, $unify: true) {\n  @include _class-pattern(class-not-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-ns($unify: true) {\n  @include class-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-not-ns($unify: true) {\n  @include class-not-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n","////\n/// Link Tool : icons\n/// @group link\n////\n\n@mixin _build-link-icon($size-settings, $place, $size:md, $font-icon: false, $reverse: false) {\n\n  $icon-size: icon-size(map_get($size-settings, icon));\n\n  @if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n  }\n\n  @if $reverse {\n    flex-direction: row-reverse;\n  }\n  @else {\n    flex-direction: row;\n  }\n\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n  $icon-margin-x: space(map_get($size-settings, icon-margin-x));\n\n  @if $place == left {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include before {\n      margin-left: -($icon-margin);\n      margin-right: $icon-margin-x;\n      font-size: $icon-size;\n    }\n  }\n  @else if $place == right {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include before {\n      margin-right: -($icon-margin);\n      margin-left: $icon-margin-x;\n      font-size: $icon-size;\n    }\n  }\n  @else if $place == only {\n    $min-height: space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) / 2;\n\n    overflow: hidden;\n    white-space: nowrap;\n    max-width: $min-height;\n    max-height: $min-height;\n    padding-left: $padding-x;\n    padding-right: $padding-x;\n\n    @include before {\n      margin-left: 0;\n      margin-right: $padding-x;\n      font-size: $icon-size;\n    }\n  }\n}\n","////\n/// Link Tool : sizes\n/// @group link\n////\n\n@mixin _build-link-size($size-settings, $border-radius: false) {\n  $font-size: map_get($size-settings, font-size);\n  $style: get-text-style($font-size);\n  $line-height: space(map_get($style, line-height));\n  font-size: px-rem($font-size);\n  line-height: $line-height;\n\n  $min-height: space(map_get($size-settings, min-height));\n  @if $min-height > 0 {\n    min-height: $min-height;\n  }\n\n  $max-icon-height: icon-size(md);\n\n  @if map_has_key($size-settings, icon-only) {\n    $max-icon-height: icon-size(map_get($size-settings, icon-only));\n  }\n  @else if map_has_key($size-settings, icon) {\n    $max-icon-height: icon-size(map_get($size-settings, icon));\n  }\n\n  $space-y: max($line-height, $max-icon-height);\n  $padding-x: space(map_get($size-settings, padding-x));\n  $padding-y: max(($min-height - $space-y) / 2, 0);\n\n  padding: #{$padding-y} #{$padding-x};\n\n  @if $border-radius {\n    border-radius: #{$min-height / 2};\n  }\n}\n\n@function _link-icon-margin($size) {\n  @return icon-size($size) / 6;\n}\n\n@mixin _link-align-on-content($size, $place, $size-settings) {\n  $padding-x: space(map_get($size-settings, padding-x));\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n\n  @if $place == null {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n  @else if $place == left {\n    margin-left: -($padding-x - $icon-margin);\n    margin-right: -($padding-x);\n  }\n  @else if $place == right {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x - $icon-margin);\n  }\n  @else if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n    $min-height: space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) / 2;\n\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n}\n","////\n/// Core Function : units\n/// @group core\n////\n\n/// Retourne la valeur numérique sans unité.\n/// @access public\n/// @param {String} $value - la valeur avec unité\n/// @example\n///   clean-unit(12px);\n@function clean-unit($value) {\n  @if $value == null {\n    @return null;\n  }\n  @return ($value / ($value * 0 + 1));\n}\n\n/// Return rem from px\n///\n/// @param {String} $px - Font size in pixels\n/// @param {String} $root-font-size [$base-font-size-px] - Pixel font size for conversion\n///\n/// @example scss - Get 1rem conversion from 16px, using $base-font-size-px\n///   .foo {\n///     font-size: px-rem(12px);\n///   }\n@function px-rem($px, $root-font-size: 16px) {\n  @return clean-unit($px / $root-font-size) * 1rem;\n}\n\n@function is-unit($value, $unit) {\n  $v: to-lower-case(quote($value));\n  $u: quote($unit);\n  @return str-index($v, $u) == (str-length($v) - str-length($u) + 1);\n}\n\n@function is-basic-unit($value) {\n  $units: em ex '%' px cm mm in pt pc ch rem vw vh vmin vmax;\n  @each $unit in $units {\n    @if is-unit($value, $unit) {\n      @return true;\n    }\n  }\n  @return false;\n}\n","////\n/// Core Tool : Typography font-weight\n/// @group core\n////\n\n/// Return font-weight value from font-weight map.\n///\n/// @param {String} $scale ['regular'] - Type scale value from `$weight-scale` (Default to 'regular' = 400)\n///\n/// @example scss - Set font-weight to bold (700)\n///   .foo {\n///     font-weight: font-weight('bold');\n///   }\n\n@function font-weight($scale: regular) {\n  @return map-get($font-weight-scale, $scale);\n}\n\n@mixin font-weight($scale) {\n  font-weight: font-weight($scale);\n}\n\n@mixin build-utillity-font-weight() {\n  $fontWeightValues: map-get($font-weight-vars, values);\n  @if $fontWeightValues == 'all' {\n    $fontWeightValues: map-keys($font-weight-names);\n  }\n  @each $weight in $fontWeightValues {\n    $name: map-get($font-weight-names, $weight);\n    & #{ns('text--' + $name)} {\n      font-weight: #{$weight} !important;\n    }\n  }\n}\n","////\n/// Core Setting : Typography font-weight\n/// @group core\n////\n\n$font-weight-scale: (\n  thin: 100,\n  extra-light: 200,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  semi-bold: 600,\n  bold: 700,\n  extra-bold: 800,\n  heavy: 900\n);\n\n$font-weight-names: (\n  100: thin,\n  200: extra-light,\n  300: light,\n  400: regular,\n  500: medium,\n  600: semi-bold,\n  700: bold,\n  800: extra-bold,\n  900: heavy\n);\n\n$font-weight-vars: (\n  values: 300 400 500 700 900,\n  breakpoints: false\n) !default;\n\n@if (map-get($typography-vars, font-weight) != null) {\n  $font-weight-vars: map-get($typography-vars, font-weight);\n}\n","////\n/// Core Tool : Icon\n/// @group core\n////\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return px-rem(map-get($icon-size-map, $size));\n}\n\n@mixin icon-size($size:md) {\n  font-size: #{icon-size($size)} !important;\n}\n\n@mixin with-icon($size:md) {\n  @include has-icon {\n    @include before {\n      @if $size != md {\n        @include icon-size($size);\n      }\n      @content;\n    }\n  }\n}\n\n@mixin generate-icons($base, $deprecated: false) {\n  $icons-settings: $icons-settings;\n  @if $deprecated {\n    $icons-settings: $icons-settings-deprecated;\n  }\n  @each $icon, $setting in $icons-settings {\n    #{ns($base + '-' + $icon)} {\n      @include before(icon-glyph($icon, $deprecated));\n      @if is-deprecated($icon) {\n        @include before {\n          font-weight: 700;\n        }\n      }\n    }\n  }\n}\n\n@function icon-glyph($icon, $deprecated: false, $is-ligature: false) {\n  $icon-settings: map-get($icons-settings, $icon);\n  @if is-deprecated($icon) or $deprecated {\n    $icon-settings: map-get($icons-settings-deprecated, $icon);\n  }\n  @if $is-ligature {\n    @return '#{map-get($icon-settings, ligature)}';\n  }\n  @else {\n    @return '#{map-get($icon-settings, codepoint)}';\n  }\n}\n\n@function is-deprecated($icon) {\n  @return not map-has-key($icons-settings, $icon);\n}\n\n@function get-icons-settings-version($deprecated: false) {\n  @if $deprecated {\n    @return $icons-settings-deprecated;\n  }\n  @else {\n    @return $icons-settings;\n  }\n}\n\n@mixin icon-content($icon) {\n  content: icon-glyph($icon);\n\n  @if is-deprecated($icon) {\n    font-weight: 700;\n  }\n  @else {\n    font-weight: 400;\n  }\n}\n\n@function font-icon($size: md, $deprecated: false) {\n  $font-weight: normal;\n  @if $deprecated {\n    $font-weight: 700;\n  }\n  @return normal $font-weight normal #{icon-size($size)}/1 #{$namespace}-icon;\n}\n\n@mixin font-icon($size: md, $deprecated: false) {\n  font: font-icon($size, $deprecated);\n}\n\n@mixin icon($icon: null, $size: md, $pseudo: before) {\n  @include _pseudo($pseudo) {\n    @if $size != null {\n      $deprecated: is-deprecated($icon);\n      @include font-icon($size, $deprecated);\n    }\n\n    @if $icon != null {\n      @include icon-content($icon);\n    }\n\n    @content;\n  }\n}\n","////\n/// Follow Deprecated Module\n/// @group follow\n////\n\n#{ns(follow)} {\n  #{ns(links-group)} {\n    @include disable-list-style;\n    @include horizontal-btns-group;\n    @include margin-right(-4v);\n    @include margin-bottom(-4v);\n    @include width(auto);\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  &__social {\n    #{ns(link)} {\n      @include disable-underline;\n      @include tint-enabled(true, null);\n      display: inline-flex;\n      @include margin-right(4v);\n      @include margin-bottom(4v);\n      @include nest-btn(md, only, null, null, false);\n    }\n\n    #{ns(links-group--lg)} {\n      #{ns(link)} {\n        @include nest-btn(lg, only, null, null, false);\n      }\n    }\n  }\n\n  @include social-deprecated-icon(facebook, facebook-circle-fill);\n  @include social-deprecated-icon(twitter, twitter-fill);\n  @include social-deprecated-icon(instagram, instagram-fill);\n  @include social-deprecated-icon(linkedin, linkedin-box-fill);\n  @include social-deprecated-icon(youtube, youtube-fill);\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: \"●\\00a0\\00a0\";\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n$underline-thickness: 0.0625em;\n\n@mixin a-reset {\n  text-decoration: none;\n  color: inherit;\n}\n\n@mixin enable-underline() {\n  --underline-img: linear-gradient(0deg, currentColor, currentColor);\n  --link-blank-font: #{font-icon(sm, true)};\n  --link-blank-content: \"\\00a0#{icon-glyph(external-link-line, true)}\";\n}\n\n@mixin disable-underline() {\n  --underline-img: none;\n  --link-blank-font: none;\n  --link-blank-content: none;\n}\n\n@mixin link-underline() {\n  background-image: var(--underline-img), var(--underline-img);\n  background-position: 50% calc(50% + #{11.5 * $underline-thickness }), 50% calc(50% + #{10.5 * $underline-thickness });\n  background-repeat: no-repeat, no-repeat;\n  transition: background-size 0s;\n  @include link-underline-background-size(100%, 0);\n}\n\n@mixin link-underline-background-size($base-width: 100%, $hover-width: 100%) {\n  background-size: #{$hover-width} #{$underline-thickness }, #{$base-width} #{$underline-thickness };\n}\n\n@mixin hover-underline () {\n  &:hover,\n  &:active {\n    @include link-underline-background-size(100%, 100%);\n  }\n}\n\n@mixin link-blank() {\n  @include after(var(--link-blank-content)) {\n    font: var(--link-blank-font);\n  }\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all, $check-disabled: false) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: $selector;\n        @if $check-disabled {\n          $nested: nest($selector, map-get($hover, selector));\n        }\n        $associated: $nested;\n        @if & != null and quote(&) != ':root' {\n          $associated: selector-associate(quote(&), $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-tint () {\n  &:hover {\n    background-color: var(--hover-tint);\n  }\n\n  &:active {\n    background-color: var(--active-tint);\n  }\n}\n\n@mixin enable-tint () {\n  @include tint-enabled(true, true);\n}\n\n@mixin disable-tint() {\n  @include tint-enabled(false, false);\n}\n\n@mixin tint-enabled ($hover: null, $active: null) {\n  @if $hover {\n    --hover-tint: var(--hover);\n  }\n  @else if $hover == false {\n    --hover-tint: transparent;\n  }\n\n  @if $active {\n    --active-tint: var(--active);\n  }\n  @else if $active == false {\n    --active-tint: transparent;\n  }\n}\n\n@mixin hover-brighten ($element, $img) {\n  @at-root #{$element} {\n    &:hover #{$img} {\n      --brightness: calc(100% + var(--brighten) * #{$hover-brighten});\n    }\n\n    &:active #{$img} {\n      --brightness: calc(100% + var(--brighten) * #{$hover-brighten * 2});\n    }\n  }\n}\n\n@mixin hover-brighten-filter () {\n  filter: brightness(var(--brightness));\n}\n","////\n/// Follow Scheme\n/// @group follow\n////\n\n@mixin _follow-scheme($legacy: false) {\n  #{ns(follow)} {\n    @include scheme-element-bg-color(alt blue-france, (legacy: $legacy));\n\n    #{ns(input)} {\n      @include scheme-element-bg-color(default grey, (legacy: $legacy));\n    }\n\n    &__title {\n      @include scheme-element-text-color(title grey, (legacy: $legacy));\n    }\n\n    &__newsletter {\n      &-legal {\n        @include scheme-element-text-color(mention grey, (legacy: $legacy));\n      }\n    }\n\n    &__social {\n      #{ns(btn)} {\n        @include btn-kind-scheme(4, $legacy);\n      }\n    }\n\n    #{ns(grid-row)} > *:not(:first-child) {\n      // Séparateur en box-shadow\n      @include scheme-element-box-shadow-color(default blue-france, (legacy: $legacy), top-1-out);\n      @include respond-from(md) {\n        @include scheme-element-box-shadow-color(default blue-france, (legacy: $legacy), left-1-out);\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Color disabled\n/// @group core\n////\n\n/// Applique les couleurs disabled sur l'élément\n/// @access public\n/// @param {map} map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin disabled-colors($options: ()) {\n  $legacy: map-get($options, legacy);\n  $text: map-get($options, text);\n  $background: map-get($options, background);\n  $box-shadow: map-get($options, box-shadow);\n\n  @if $text {\n    @include scheme-element-text-color(disabled grey, (legacy: $legacy));\n  }\n\n  @if $background {\n    @include scheme-element-bg-color(disabled grey, (legacy: $legacy));\n  }\n\n  @if $box-shadow == true {\n    @include scheme-element-box-shadow-color(disabled grey, (legacy: $legacy));\n  }\n  @else if $box-shadow {\n    @include scheme-element-box-shadow-color(disabled grey, (legacy: $legacy), $box-shadow);\n  }\n}\n/// Applique les couleurs disabled sur l'élément avec les sélecteurs appropriés\n/// @access public\n/// @param {map} map des options :\n///   - can-be-link {boolean}: ajoute le sélecteur de lien sans href.\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin disabled($options: ()) {\n  $selectors: '&:disabled';\n  @if map-get($options, can-be-link) {\n    $selectors: append($selectors, selector-associate(&, 'a:not([href])'), comma);\n  }\n\n  @at-root #{$selectors} {\n    @include disabled-colors($options);\n    @content;\n  }\n}\n","////\n/// Core Tool : Selector Breakpoint\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Media query order\n/// Fix temporaire, déclare les média query vides de chaque breakpoints, pour garder le bon ordre au build\n////\n\n@import 'core/style/selector/setting/breakpoint';\n@import 'core/style/selector/tool/breakpoint';\n\n@each $bp, $limits in $breakpoints {\n  @if $bp != xs {\n    @include respond-from($bp) {\n      /*! media #{$bp} */\n    }\n  }\n}\n","////\n/// Legacy Tool : legacy\n/// @group legacy\n////\n\n/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin not-legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Follow Legacy\n/// @group follow\n////\n\n@include legacy(ie11) {\n  /**\n  * Correctif de la largeur max des textes\n  */\n  #{ns(follow__newsletter)} {\n    & > * {\n      max-width: 100%;\n    }\n  }\n}\n","////\n/// Core Tool : Selector nest\n/// @group core\n////\n\n@mixin nest($selector: null) {\n  @if $selector {\n    #{$selector} {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n"]}